###  CALCULATE
# Found the distribution of genes significatifs on Days Conditions by type cell
# Visualization for genes DE on only 1 days 
#
# ====================== Calculate =============================
dataFrameTotal=data.frame(signiDEgene,nbDayDE=rep(0,length(signiDEgene$baseMean)),Dynamic=rep(0,length(signiDEgene$baseMean)))
daystable<-c()
celltypetable<-c()
weightNode<-c()
ViolinDay<-c()
ViolinCell<-c()
ViolinName<-c()
ViolinValue<-c()
for ( typeCell in vectTypeCell ) {
  #keep table with signi gene
  tempoSigniDEgene<- signiDEgene %>% filter(type==typeCell)
  #keep only uniqueID sort by days
  uniqueIdByDay = lapply(unique(tempoSigniDEgene$day), function(x) filter(tempoSigniDEgene, day == x) %>% dplyr::select(id) %>% unlist() %>% as.character())
  names(uniqueIdByDay) = unique(tempoSigniDEgene$day)
  #found all combinaison where one same gene is on 1 or 2 or 3 or 4 days 
  allcombinaison =ComplexHeatmap::make_comb_mat(uniqueIdByDay)
  #keep only gene DE one only one DAY
  Sup2Combi<-allcombinaison[comb_degree(allcombinaison) == 1]
  
  #prepare vector to plot
  Node_Target<-names(comb_size(Sup2Combi))
  num_combi<-1
  for ( name in Node_Target){
    #Make table
    particulName<-str_extract_all(name,boundary("character"))
    if ( length(particulName[[1]]) <4 ){ vectDay = vectDay2} else { vectDay = vectDay1 }
    for (i in 1:(length(particulName[[1]]))){
      if ( particulName[[1]][[i]] == "1" ){
        dayDE<-vectDay[i]
        daystable<-c(daystable,vectDay[i])
        celltypetable<-c(celltypetable, typeCell)
        weightNode<-c(weightNode,unname(comb_size(Sup2Combi)[num_combi]))
      }
    }
    for (idG in extract_comb(Sup2Combi,name) ){
      dataFrameTotal[dataFrameTotal$id == idG & dataFrameTotal$type == typeCell ,]$nbDayDE<-1
      dataFrameTotal[dataFrameTotal$id == idG  & dataFrameTotal$type == typeCell ,]$Dynamic<-dayDE
      ViolinDay<-c(ViolinDay,dayDE)
      ViolinCell<-c(ViolinCell,typeCell)
      ViolinName<-c(ViolinName,unname(comb_size(Sup2Combi)[num_combi]))
      ViolinValue<-c(ViolinValue,dataFrameTotal[dataFrameTotal$id == idG & dataFrameTotal$type == typeCell ,]$log2FoldChange)
      if (length(dataFrameTotal[dataFrameTotal$id == idG & dataFrameTotal$type == typeCell ,]$log2FoldChange) > 1){
        print(dayDE)
        print(typeCell)
        print(unname(comb_size(Sup2Combi)[num_combi]))
        print(dataFrameTotal[dataFrameTotal$id == idG & dataFrameTotal$type == typeCell ,]$log2FoldChange)
      }

    }
    num_combi=num_combi+ 1
  }
}
GeneDEuniqueCond <- data.frame(
  Days=daystable,
  CellType=celltypetable,
  nbGene=weightNode
)
#colorsType = factor( c("#0072B2","#F0E442", "#D55E00","#CC79A7","#009E73", "#56B4E9"), levels=c("ECs","FAPs","M1" ,"M2","Neutro" ,"sCs") )
PlotDEGonlyOneDay<-ggplot(GeneDEuniqueCond, aes(Days,CellType,size=nbGene,color=CellType))+geom_point()+ scale_color_manual(values =c("#0072B2","#F0E442" ,"#D55E00","#CC79A7","#009E73","#56B4E9"))  +
  scale_y_discrete(limits=rev)+   theme_ipsum()
PlotDEGonlyOneDay
save_plot(paste0(odir,analyse,"PlotDEGOnlyOneD.png"),PlotDEGonlyOneDay,base_width = 4, base_height = 7)

Violindata<-data.frame(ViolinDay=ViolinDay,
                       ViolinCell=ViolinCell,
                       ViolinName=ViolinName,
                       ViolinValue=ViolinValue)
PlotDEGonlyOneDayVioline<-ggplot(Violindata, aes(x=ViolinCell ,y=ViolinValue, fill=ViolinCell)) + # fill=name allow to automatically dedicate a color for each group
  geom_jitter(shape=16, position=position_jitter(0.4), aes(color=ViolinCell,alpha=0.001), show.legend=F)+geom_violin(scale="count",aes(alpha=0.001),show.legend = c("alpha"=F))+
  scale_fill_manual(values =c("#0072B2","#F0E442" ,"#D55E00","#CC79A7","#009E73","#56B4E9"))+scale_color_manual(values =c("#0072B2","#F0E442" ,"#D55E00","#CC79A7","#009E73","#56B4E9"))+
  coord_flip() + scale_x_discrete(limits=rev) +facet_grid(cols=vars(ViolinDay), switch = "both") +
  theme(panel.grid.major=element_blank(),axis.text.x = element_text(angle = 45)) +ylab("log2FoldChange of Gene padj <0.05")+xlab("Type Cell") +
  theme_minimal()
PlotDEGonlyOneDayVioline

save_plot(paste0(odir,analyse,"PlotDEGOnlyOneD.png"),PlotDEGonlyOneDay,base_width = 4, base_height = 7)
save_plot(paste0(odir,analyse,"PlotDEGonlyOneDayVioline.png"),PlotDEGonlyOneDay,base_width = 4, base_height = 7)


#### Same with UP & DOWN info
dataFrameTotalUPDOWN=data.frame(signiDEgene,nbDayDE=rep(0,length(signiDEgene$baseMean)),Dynamic=rep(0,length(signiDEgene$baseMean)))
daystable<-c()
celltypetable<-c()
weightNode<-c()
UPDOWN<-c()
for ( typeCell in vectTypeCell ) {
  tempoSigniDEgene<- signiDEgene %>% filter(type==typeCell)
  uniqueIdByDayUP = lapply(unique(tempoSigniDEgene$day), function(x) filter(tempoSigniDEgene, day == x)  %>% filter(log2FoldChange > 0) %>% dplyr::select(id) %>% unlist() %>% as.character())
  names(uniqueIdByDayUP) = unique(paste0(tempoSigniDEgene$day,"_UP"))
  uniqueIdByDayDOWN = lapply(unique(tempoSigniDEgene$day), function(x) filter(tempoSigniDEgene, day == x)  %>% filter(log2FoldChange < 0) %>% dplyr::select(id) %>% unlist() %>% as.character())
  names(uniqueIdByDayDOWN) = unique(paste0(tempoSigniDEgene$day,"_DOWN"))
  uniqueIdByDay<-c(uniqueIdByDayUP,uniqueIdByDayDOWN)
  #UpSetR::upset(UpSetR::fromList(uniqueIdByDay))
  allcombinaison =ComplexHeatmap::make_comb_mat(uniqueIdByDay)
  Sup2Combi<-allcombinaison[comb_degree(allcombinaison) == 1]
  Node_Target<-names(comb_size(Sup2Combi))
  num_combi<-1 #for refind number gene on this combinaison
  for ( name in Node_Target){
    particulName<-str_extract_all(name,boundary("character"))
    nbDay=length(particulName[[1]])/2
    if ( nbDay<4 ){ vectDay = vectDay2} else { vectDay = vectDay1 }
    for (i in 1:nbDay){
      if ( particulName[[1]][[i]] == "1" ){
        dayDE<-paste0(vectDay[i],"_UP")
        daystable<-c(daystable,paste0(vectDay[i],"_UP"))
        celltypetable<-c(celltypetable, typeCell)
        UPDOWN<-c(UPDOWN,"UP")
        weightNode<-c(weightNode,unname(comb_size(Sup2Combi)[num_combi]))
      }else { if (particulName[[1]][[i+nbDay]] == "1"){
        dayDE<-paste0(vectDay[i],"_DOWN")
        daystable<-c(daystable,paste0(vectDay[i],"_DOWN"))
        celltypetable<-c(celltypetable, typeCell)
        weightNode<-c(weightNode,unname(comb_size(Sup2Combi)[num_combi]))
        UPDOWN<-c(UPDOWN,"DOWN")
      }}
    } 
    num_combi=num_combi+ 1
    for (idG in extract_comb(Sup2Combi,name) ){
      dataFrameTotalUPDOWN[dataFrameTotalUPDOWN$id == idG & dataFrameTotalUPDOWN$type == typeCell ,]$nbDayDE<-1
      dataFrameTotalUPDOWN[dataFrameTotalUPDOWN$id == idG  & dataFrameTotalUPDOWN$type == typeCell ,]$Dynamic<-dayDE
    }
  }
}

GeneDEuniqueCondUPDOWN <- data.frame(
  Days=daystable,
  CellType=celltypetable,
  nbGene=weightNode,
  DiffSens=UPDOWN
)
#colorsType = factor( c("#0072B2","#F0E442", "#D55E00","#CC79A7","#009E73", "#56B4E9"), levels=c("ECs","FAPs","M1" ,"M2","Neutro" ,"sCs") )
PlotDEGonlyOneDayUPDOWN<-ggplot(GeneDEuniqueCondUPDOWN, aes(Days,CellType,size=nbGene,color=DiffSens))+geom_point()+ scale_color_manual(values =c('red','blue'))  +
  scale_y_discrete(limits=rev)+   theme_ipsum()
PlotDEGonlyOneDayUPDOWN
save_plot(paste0(odir,analyse,"PlotDEGOnlyOneDayUPDOWN.png"),PlotDEGonlyOneDayUPDOWN,base_width = 4, base_height = 7)

